// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id                    String    @id @default(cuid())
  name                  String?
  email                 String    @unique
  emailVerified         DateTime?
  image                 String?
  password              String?
  subscriptionStatus    String    @default("free")
  subscriptionStart     DateTime?
  subscriptionEnd       DateTime?
  wayforpayCustomerId   String?
  generationsUsed       Int       @default(0)
  generationsLimit      Int       @default(5)
  createdAt             DateTime  @default(now())
  updatedAt             DateTime  @updatedAt

  accounts    Account[]
  sessions    Session[]
  generations Generation[]
  payments    Payment[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Generation {
  id           String   @id @default(cuid())
  userId       String
  productName  String
  category     String
  writingStyle String
  language     String
  content      String   // JSON string
  createdAt    DateTime @default(now())

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Payment {
  id               String   @id @default(cuid())
  userId           String
  amount           Int      // in kopecks
  currency         String   @default("UAH")
  status           String
  wayforpayOrderId String   @unique
  plan             String
  createdAt        DateTime @default(now())

  user User @relation(fields: [userId], references: [id])
}